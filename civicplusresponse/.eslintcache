[{"D:\\CivicPlusResponses\\CivicPlusResponses\\civicplusresponse\\src\\index.js":"1","D:\\CivicPlusResponses\\CivicPlusResponses\\civicplusresponse\\src\\App.js":"2","D:\\CivicPlusResponses\\CivicPlusResponses\\civicplusresponse\\src\\reportWebVitals.js":"3","D:\\CivicPlusResponses\\CivicPlusResponses\\civicplusresponse\\src\\components\\Response1\\Response1.js":"4","D:\\CivicPlusResponses\\CivicPlusResponses\\civicplusresponse\\src\\components\\FadeInObject\\FadeInObject.js":"5","D:\\CivicPlusResponses\\CivicPlusResponses\\civicplusresponse\\src\\components\\Response2\\Response2.js":"6","D:\\CivicPlusResponses\\CivicPlusResponses\\civicplusresponse\\src\\components\\Response2\\ColoredBox.js":"7","D:\\CivicPlusResponses\\CivicPlusResponses\\civicplusresponse\\src\\components\\Response3\\Response3.js":"8"},{"size":659,"mtime":1610768056146,"results":"9","hashOfConfig":"10"},{"size":1944,"mtime":1610768056143,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":1688,"mtime":1610745164645,"results":"13","hashOfConfig":"10"},{"size":711,"mtime":1610681816412,"results":"14","hashOfConfig":"10"},{"size":2134,"mtime":1610768056145,"results":"15","hashOfConfig":"10"},{"size":1311,"mtime":1610768056144,"results":"16","hashOfConfig":"10"},{"size":2630,"mtime":1610768969405,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1b6byr9",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"D:\\CivicPlusResponses\\CivicPlusResponses\\civicplusresponse\\src\\index.js",[],["37","38"],"D:\\CivicPlusResponses\\CivicPlusResponses\\civicplusresponse\\src\\App.js",[],"D:\\CivicPlusResponses\\CivicPlusResponses\\civicplusresponse\\src\\reportWebVitals.js",[],"D:\\CivicPlusResponses\\CivicPlusResponses\\civicplusresponse\\src\\components\\Response1\\Response1.js",[],"D:\\CivicPlusResponses\\CivicPlusResponses\\civicplusresponse\\src\\components\\FadeInObject\\FadeInObject.js",["39","40","41","42"],"import React, {useState, useRef, useEffect} from 'react';\r\nimport \"./FadeInObject.css\"\r\n\r\nfunction FadeInSection(props) {\r\n    const [isVisible, setVisible] = React.useState(true);\r\n    const domRef = React.useRef();\r\n    React.useEffect(() => {\r\n      const observer = new IntersectionObserver(entries => {\r\n        entries.forEach(entry => setVisible(entry.isIntersecting));\r\n      });\r\n      observer.observe(domRef.current);\r\n      return () => observer.unobserve(domRef.current);\r\n    }, []);\r\n    return (\r\n      <div\r\n        className={`fade-in-section ${isVisible ? 'is-visible' : ''}`}\r\n        ref={domRef}\r\n      >\r\n        {props.children}\r\n      </div>\r\n    );\r\n  }\r\n  export default FadeInSection","D:\\CivicPlusResponses\\CivicPlusResponses\\civicplusresponse\\src\\components\\Response2\\Response2.js",["43"],"import React, { useState } from 'react';\r\nimport { Button, Col, Row } from 'reactstrap';\r\nimport ColoredBox from './ColoredBox';\r\nimport \"./Response2.css\";\r\n\r\nconst Response2 = props => {\r\n    const {sliderFontSize} = props;\r\n    const [currentColor, setCurrentColor] = useState('whitesmoke')\r\n    var text = `\r\n        The <a> tag, commonly pronounced as “anchor” tag, will create a hyper link on your website.\r\n         This can be used to send users to another page on your site or a completely new site. \r\n         In this case you will send a user to Google’s front page because the “href” attribute of the anchor tag was set to https://www.google.com/. \r\n         `\r\n    var text2 = `\r\n         My personal recommendation would be to ensure that the color scheme of your site is not disrupted by the blue/purple hyperlink.\r\n          You can change the color of the hyperlink with additional CSS.\r\n        `;\r\n\r\n        const handleColorChange = (event) =>{\r\n            setCurrentColor(event)\r\n        }\r\n    return(\r\n        <div>\r\n            \r\n            <p style={{fontSize: sliderFontSize}}> {text}</p>\r\n            <div>\r\n                <Row>\r\n                    <Col><button className=\"Buttons\" onClick={()=>{handleColorChange('#007BFF')}} style={{backgroundColor:'#007BFF'}} color=\"black\" >Try Me!</button></Col>\r\n                    <Col><button className=\"Buttons\" onClick={()=>{handleColorChange('red')}} style={{backgroundColor:'red' }} color=\"black\" >Try Me!</button></Col>\r\n                    <Col><button className=\"Buttons\" onClick={()=>{handleColorChange('green')}} style={{backgroundColor:'green' }} color=\"black\" >Try Me!</button></Col>\r\n                    <Col><button className=\"Buttons\" onClick={()=>{handleColorChange('whitesmoke')}} style={{backgroundColor:'whitesmoke' ,  borderStyle:'solid', borderColor:'black'}} color=\"black\" >Try Me!</button></Col>\r\n                </Row>\r\n\r\n                <ColoredBox myColor={currentColor} />\r\n            </div>\r\n            <p style={{fontSize: sliderFontSize}}> {text2}</p>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Response2;","D:\\CivicPlusResponses\\CivicPlusResponses\\civicplusresponse\\src\\components\\Response2\\ColoredBox.js",[],"D:\\CivicPlusResponses\\CivicPlusResponses\\civicplusresponse\\src\\components\\Response3\\Response3.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":16,"nodeType":"50","messageId":"51","endLine":1,"endColumn":24},{"ruleId":"48","severity":1,"message":"52","line":1,"column":26,"nodeType":"50","messageId":"51","endLine":1,"endColumn":32},{"ruleId":"48","severity":1,"message":"53","line":1,"column":34,"nodeType":"50","messageId":"51","endLine":1,"endColumn":43},{"ruleId":"54","severity":1,"message":"55","line":12,"column":46,"nodeType":"50","endLine":12,"endColumn":53},{"ruleId":"48","severity":1,"message":"56","line":2,"column":10,"nodeType":"50","messageId":"51","endLine":2,"endColumn":16},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","The ref value 'domRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'domRef.current' to a variable inside the effect, and use that variable in the cleanup function.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]